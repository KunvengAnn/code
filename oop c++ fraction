#include <iostream>

class Fraction
{
public:
    int numerator;
    int denominator;

    Fraction(int n, int d)
    {
        numerator = n;
        denominator = d;
    }

    Fraction operator+(const Fraction &f2) const
    {
        int n = numerator * f2.denominator + f2.numerator * denominator;
        int d = denominator * f2.denominator;
        return Fraction(n, d);
    }

    Fraction operator-(const Fraction &f2) const
    {
        int n = numerator * f2.denominator - f2.numerator * denominator;
        int d = denominator * f2.denominator;
        return Fraction(n, d);
    }

    Fraction operator*(const Fraction &f2) const
    {
        int n = numerator * f2.numerator;
        int d = denominator * f2.denominator;
        return Fraction(n, d);
    }
};

int main()
{
    Fraction f1(1, 2);
    Fraction f2(3, 4);

    Fraction result = f1 + f2;
    std::cout << result.numerator << "/" << result.denominator << std::endl;

    result = f1 - f2;
    std::cout << result.numerator << "/" << result.denominator << std::endl;

    result = f1 * f2;
    std::cout << result.numerator << "/" << result.denominator << std::endl;

    return 0;
}
